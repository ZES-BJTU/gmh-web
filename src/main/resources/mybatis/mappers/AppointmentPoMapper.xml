<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zes.squad.gmh.web.mapper.AppointmentMapper">
	<resultMap id="BaseResultMap" type="com.zes.squad.gmh.web.entity.po.AppointmentPo">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="store_id" jdbcType="BIGINT" property="storeId" />
		<result column="member_id" jdbcType="BIGINT" property="memberId" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="project_id" jdbcType="BIGINT" property="projectId" />
		<result column="employee_id" jdbcType="BIGINT" property="employeeId" />
		<result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
		<result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="line" jdbcType="TINYINT" property="line" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
		<result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
	</resultMap>
	<sql id="Base_Column_List">
		`id`,`store_id`,`member_id`,`phone`,`project_id`,`employee_id`,`begin_time`,`end_time`,`status`,`line`,`remark`,
		`created_time`,
		`modified_time`
	</sql>
	<select id="getAll" parameterType="long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from appointment where store_id=#{storeId}
	</select>
	<select id="getByPhone" parameterType="string" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from appointment where phone=#{phone}
	</select>
	<select id="selectByCondition" resultType="int">
		SELECT
		COUNT(*)
		FROM
		appointment
		WHERE
		store_id = #{storeId, jdbcType=BIGINT}
		AND `status` = #{status, jdbcType=INTEGER}
		<if test="employeeId != null">
			AND employee_id = #{employeeId, jdbcType=BIGINT}
		</if>
		<if test="memberId != null">
			AND member_id = #{memberId, jdbcType=BIGINT}
		</if>
		AND
		((begin_time BETWEEN #{beginTime, jdbcType=TIMESTAMP} AND #{endTime,
		jdbcType=TIMESTAMP})
		OR
		(end_time BETWEEN #{beginTime, jdbcType=TIMESTAMP} AND #{endTime,
		jdbcType=TIMESTAMP}
		)
		OR
		(#{beginTime, jdbcType=TIMESTAMP} <![CDATA[<]]>
		begin_time AND #{endTime, jdbcType=TIMESTAMP} <![CDATA[>]]>
		end_time))
	</select>
	<select id="selectById" parameterType="long" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM appointment WHERE id = #{id, jdbcType=BIGINT}
	</select>
	<insert id="insert" parameterType="com.zes.squad.gmh.web.entity.po.AppointmentPo">
		INSERT INTO
		appointment(
		store_id,member_id,
		phone,project_id,employee_id,
		begin_time,end_time,
		`status`,line,remark)
		VALUES
		(#{storeId, jdbcType=BIGINT},#{memberId,
		jdbcType=BIGINT},#{phone,
		jdbcType=VARCHAR},#{projectId,
		jdbcType=BIGINT},#{employeeId,
		jdbcType=BIGINT},#{beginTime,
		jdbcType=TIMESTAMP},#{endTime,
		jdbcType=TIMESTAMP},#{status,
		jdbcType=INTEGER},#{line, jdbcType=TINYINT},#{remark,
		jdbcType=VARCHAR})
	</insert>
	<update id="updateSelective" parameterType="com.zes.squad.gmh.web.entity.po.AppointmentPo">
		UPDATE appointment
		<set>
			<if test="memberId != null">
				member_id = #{memberId, jdbcType=BIGINT},
			</if>
			<if test="phone != null">
				phone = #{phone, jdbcType=VARCHAR},
			</if>
			<if test="projectId != null">
				project_id = #{projectId, jdbcType=BIGINT},
			</if>
			<if test="employeeId != null">
				employee_id = #{employeeId, jdbcType=BIGINT},
			</if>
			<if test="beginTime != null">
				begin_time = #{beginTime, jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				end_time = #{endTime, jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status, jdbcType=INTEGER},
			</if>
			<if test="line != null">
				line = #{line, jdbcType=TINYINT},
			</if>
			<if test="remark != null">
				remark = #{remark, jdbcType=VARCHAR}
			</if>
		</set>
		WHERE id = #{id, jdbcType=BIGINT}
	</update>
	<update id="updateForStart">
		UPDATE appointment SET
		status = #{status,
		jdbcType=INTEGER} WHERE id = #{id,
		jdbcType=BIGINT}
	</update>
	<update id="updateForCancel">
		UPDATE appointment SET
		status = #{status,
		jdbcType=INTEGER} WHERE id = #{id,
		jdbcType=BIGINT}
	</update>
	<update id="updateForFinish">
		UPDATE appointment SET
		status = #{status,
		jdbcType=INTEGER} WHERE id = #{id,
		jdbcType=BIGINT}
	</update>
	<delete id="deleteById" parameterType="long">
		DELETE FROM appointment WHERE
		id=#{id, jdbcType=BIGINT}
	</delete>
</mapper>