<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zes.squad.gmh.web.mapper.EmployeeMapper">
	<resultMap id="BaseResultMap" type="com.zes.squad.gmh.web.entity.po.EmployeePo">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="sex" jdbcType="TINYINT" property="sex" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="shop_id" jdbcType="BIGINT" property="shopId" />
		<result column="entry_date" jdbcType="TIMESTAMP" property="entryDate" />
		<result column="quit_date" jdbcType="TIMESTAMP" property="quitDate" />
		<result column="work" jdbcType="TINYINT" property="work" />
		<result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
		<result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
	</resultMap>
	<resultMap type="long" id="IdResultMap">
		<id column="id" jdbcType="BIGINT" property="id" />
	</resultMap>
	<sql id="Base_Column_List">
		`id`,`name`,`sex`,`phone`,`shop_id`,`entry_date`,`quit_date`,`work`,
		`created_time`,
		`modified_time`
	</sql>
	<select id="selectById" parameterType="long" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM employee WHERE id = #{id, jdbcType=BIGINT}
	</select>
	<select id="getAll" parameterType="long" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM employee WHERE shop_id = #{storeId, jdbcType=BIGINT}
	</select>
	<select id="selectByIds" parameterType="list" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM employee
		<where>
			<if test="storeId != null">
				shop_id = #{storeId, jdbcType=BIGINT}
			</if>
			<if test="ids != null and ids.size() != 0">
				AND id IN
				<foreach collection="ids" item="id" separator="," open="("
					close=")">
					#{id, jdbcType=BIGINT}
				</foreach>
			</if>
			<if test="work != null">
				AND work = #{work, jdbcType=TINYINT}
			</if>
		</where>
	</select>
	<select id="selectIdsByCondition"
		parameterType="com.zes.squad.gmh.web.entity.condition.EmployeeJobQueryCondition"
		resultMap="IdResultMap">
		SELECT e.id FROM employee e
		<where>
			<if test="storeId != null">
				e.shop_id = #{storeId, jdbcType=BIGINT}
			</if>
			<if test="work != null">
				AND e.`work` = #{work, jdbcType=TINYINT}
			</if>
			<if test="searchString != null and searchString != ''">
				<bind name="search" value="'%' + searchString + '%'" />
				AND CONCAT_WS("",e.`name`,e.phone) LIKE CONCAT(#{search})
			</if>
		</where>
	</select>
	<select id="listByPage" parameterType="long" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM employee WHERE
		work=1
		AND
		shop_id=#{shopId, jdbcType=BIGINT}
	</select>
	<insert id="insert" parameterType="com.zes.squad.gmh.web.entity.po.EmployeePo"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		employee(`name`,`sex`,`phone`,`shop_id`,`entry_date`,`quit_date`,`work`)
		VALUES
		(#{name, jdbcType=VARCHAR},#{sex, jdbcType=TINYINT},#{phone,
		jdbcType=VARCHAR},#{shopId, jdbcType=BIGINT},#{entryDate,
		jdbcType=TIMESTAMP},#{quitDate, jdbcType=TIMESTAMP},#{work,
		jdbcType=TINYINT})
	</insert>
	<update id="leave" parameterType="map">
		UPDATE employee SET work=0,
		quit_date=#{leave, jdbcType=TIMESTAMP}
		WHERE id=#{id, jdbcType=BIGINT}
	</update>
	<update id="batchUpdateWork">
		UPDATE employee SET work=#{work, jdbcType=TINYINT},
		quit_date=#{leaveDate, jdbcType=TIMESTAMP}
		WHERE id IN
		<foreach collection="ids" item="id" separator="," open="("
			close=")">
			#{id, jdbcType=BIGINT}
		</foreach>
	</update>
	<update id="updateSelective" parameterType="com.zes.squad.gmh.web.entity.po.EmployeePo">
		UPDATE employee
		<set>
			<if test="name != null">
				name = #{name, jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex, jdbcType=TINYINT},
			</if>
			<if test="phone != null">
				phone = #{phone, jdbcType=VARCHAR},
			</if>
		</set>
		WHERE id=#{id, jdbcType=BIGINT}
	</update>
	<select id="search" parameterType="map" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM employee
		WHERE shop_id=#{storeId, jdbcType=BIGINT} AND
		CONCAT_WS("",name,phone)
		LIKE
		CONCAT('%',#{searchString},'%')
	</select>
</mapper>